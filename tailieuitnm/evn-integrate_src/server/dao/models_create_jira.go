package dao

import (
	"errors"
	"strconv"
	"strings"

	log "evn/lib/logger"
	"evn/server/constant"

	"github.com/PuerkitoBio/goquery"
)

// Create Result
type CreateJiraResult struct {
	ID   string `json:"id"`
	Key  string `json:"key"`
	Self string `json:"self"`
}

// create jira fields
// Generated by https://quicktype.io

type Payload struct {
	Update Update     `json:"update"`
	Fields JiraFields `json:"fields"`
}

// 1	Project   							category
// 2	Key
// 3	Summary								subject
// 4	Description							Description
// 5	Attachment							Attachment // up riêng
// 6	Phân loại chi tiết yêu cầu			Subcategory
// 7	Issue Type							(ko cần có trên SDP) Default :"Service desk - Jira"
// 8	Đơn vị/Khách hàng					Đơn vị Khách hàng Cấp 1 /Đơn vị Khách hàng Cấp 2
// 9	Thông tin liên hệ					Thông tin liên hệ (Họ và tên người phát hiện lỗi/ đóng góp sáng kiến
// 10	Số điện thoại						Số điện thoại
// 11	Nguồn yêu cầu						mode
// 12	Ngày tiếp nhận						created data
// 13	Link Service Desk			//Chỉ có bên Jira
// 14	Link Jira					//Chỉ có bên SDP
// 15	Giai đoạn phát sinh issue			(chưa có)
// 16	Trạng thái theo 5249				(chưa có)
// 17	Issue trùng lặp						(chưa có)
// 18	Reporter
// 19	Due Date
// 20	Resolution							Resolution
// 21	Nguyên nhân
// 22	Cách giải quyết
// 23	Comment
// 24	Component/s							data ko maping, để tạo được issue nên bỏ bắt buộc bên jira
// 25	Phân hệ CMIS 3.0					Chức năng cấp 1/Chức năng cấp 2
// 26	Phiên bản							*
// 27	Chức năng DOFFICE					*
// 28	Chức năng ĐTXD						*
// 29	Chức năng HRMS						*
// 30	Chức năng EVN Portal				*
// 31	Mã BC/Form							*
// 32	Người phối hợp						*
// 33	Mã công việc liên quan				*
// 34	Tiến độ xử lý						*
// 35	Cập nhật đặc tả						*
// 36	Cập nhật source code				*
// 37	Cập nhật dữ liệu					*
// 38	Mức độ gấp							*
type JiraFields struct {
	Project          *Project           `json:"project"`   // project key - category
	Summary          string             `json:"summary"`   // Summary - subject
	Issuetype        *UserPickerCF      `json:"issuetype"` // Service desk - Jira
	Description      string             `json:"description"`
	Priority         *UserPickerCF      `json:"priority,omitempty"`
	Components       []UserPickerCF     `json:"components,omitempty"`
	Customfield11761 *SelectCF          `json:"customfield_11761,omitempty"` // Phân loại chi tiết yêu cầu - Phân loại chi tiết
	Customfield10014 string             `json:"customfield_10014,omitempty"` // Thông tin liên hệ
	Customfield16960 int64              `json:"customfield_16960,omitempty"` // Số điện thoại
	Customfield11060 *SelectCF          `json:"customfield_11060,omitempty"` // Nguồn yêu cầu - mode
	Customfield18760 string             `json:"customfield_18760,omitempty"` // Link Service Desk
	Customfield17860 *SelectCF          `json:"customfield_17860,omitempty"` // Giai đoạn phát sinh issue
	Customfield16760 *SelectCF          `json:"customfield_16760,omitempty"` // Trạng thái theo 5249
	Customfield16562 *SelectCF          `json:"customfield_16562,omitempty"` // Issue trùng lặp
	Customfield10769 *SelectCF          `json:"customfield_10769,omitempty"` // Mã BC/Form
	Customfield10262 *SelectCF          `json:"customfield_10262,omitempty"` // Mức độ gấp
	Customfield19560 *SelectCF          `json:"customfield_19560,omitempty"` // Đơn vị chủ quản
	Customfield10012 *CascadingSelectCF `json:"customfield_10012,omitempty"` // Đơn vị/Khách hàng
	Customfield13260 *CascadingSelectCF `json:"customfield_13260,omitempty"` // Phân hệ CMIS 3.0
	Customfield15460 *CascadingSelectCF `json:"customfield_15460,omitempty"` // Chức năng DOFFICE
	Customfield13660 *CascadingSelectCF `json:"customfield_13660,omitempty"` // Chức năng ĐTXD
	Customfield10013 *CascadingSelectCF `json:"customfield_10013,omitempty"` // Chức năng HRMS
	Customfield13661 *CascadingSelectCF `json:"customfield_13661,omitempty"` // Chức năng EVN Portal
	Customfield18060 *CascadingSelectCF `json:"customfield_18060,omitempty"` // Phân hệ IMIS 2
}

// Báo cáo công tác cán bộ
// Báo cáo công tác cán bộ
type UserPickerCF struct {
	Name string `json:"name"`
}

type CascadingSelectCF struct {
	Value string    `json:"value"`
	Child *SelectCF `json:"child,omitempty"`
}

type SelectCF struct {
	Value string `json:"value"`
}

type Project struct {
	Key string `json:"key"`
}

type Update struct {
}

func CreateProject(projects map[string]string, sdpTemplateID string) *Project {
	templateID := strings.TrimSpace(sdpTemplateID)
	if val, ok := projects[templateID]; ok {
		return &Project{Key: val}
	}
	return nil
}

func CreateSummary(summary string) string {
	return summary
}

func CreateIssuetype() *UserPickerCF {
	return &UserPickerCF{Name: "Service desk - Jira"}
}

func CreateDescription(des string) string {
	doc, err := goquery.NewDocumentFromReader(strings.NewReader(des))
	if err != nil {
		log.Get().Warnf("CreateJiraIssueTemplate1 NewDocumentFromReader description err: %v", err)
	}
	description := doc.Find("div").Text()
	if description == "" {
		description = "không có mô tả"
	}

	return description
}

func CreatePriority(sdpPriority string) *UserPickerCF {
	// priorityArr := strings.Split(sdpPriority, ".")
	// var priorityStr string
	// if len(priorityArr) == 2 {
	// 	priorityStr = priorityArr[1]
	// }
	// if len(priorityStr) > 0 {
	// 	return &UserPickerCF{Name: priorityStr}
	// }
	priority := strings.TrimSpace(sdpPriority)
	if len(priority) > 0 {
		return &UserPickerCF{Name: priority}
	}

	return nil
}

func CreateComponents(jiraPrjKey string, erpComp string, components ...string) []UserPickerCF {
	results := make([]UserPickerCF, 0)

	if jiraPrjKey == constant.KProjects[constant.KSdpTemplateERP] {
		results = append(results, UserPickerCF{Name: strings.TrimSpace(erpComp)})
	}

	for _, component := range components {
		if component != "" {
			results = append(results, UserPickerCF{Name: strings.TrimSpace(component)})
		}
	}
	if len(results) > 0 {
		return results
	}

	return []UserPickerCF{}
}

func CreateCustomfield11761(sdpSubcate string) *SelectCF {
	subCat := strings.TrimSpace(sdpSubcate)
	if len(subCat) > 0 {
		return &SelectCF{Value: subCat}
	}
	return nil
}

// Đơn vị/Khách hàng
func CreateCustomfield10012(sdpDonvi, sdpKhachHang string) *CascadingSelectCF {
	var khachHang *SelectCF
	if len(sdpKhachHang) > 0 {
		khachHang = &SelectCF{Value: sdpKhachHang}
	}

	if len(sdpDonvi) > 0 {
		donvi := &CascadingSelectCF{Value: sdpDonvi}
		if khachHang != nil {
			donvi.Child = khachHang
		}
		return donvi
	}

	return nil
}

func CreateCustomfield10014(ttlh string) string {
	return ttlh
}

func CreateCustomfield16960(sdpPhone string) int64 {
	if len(sdpPhone) > 0 {
		phoneValid := sdpPhone
		if sdpPhone[0] == '0' {
			phoneValid = sdpPhone[1:]
		}

		phoneNum, _ := strconv.ParseInt(phoneValid, 0, 64)

		return phoneNum
	}
	return 0
}

func CreateCustomfield11060(sdpMode string) *SelectCF {
	if len(sdpMode) > 0 {
		return &SelectCF{Value: sdpMode}
	}

	return nil
}

func CreateCustomfieldChucNangCMIS(jiraPrjKey, sdpChucNang, sdpChucNangChil string) *CascadingSelectCF {
	var child *SelectCF
	if len(sdpChucNangChil) > 0 {
		child = &SelectCF{
			Value: sdpChucNangChil,
		}
	}
	if (jiraPrjKey == constant.KProjects[constant.KSdpTemplateCMIS]) && len(sdpChucNang) > 0 {
		cn1 := &CascadingSelectCF{
			Value: sdpChucNang,
			Child: child,
		}
		return cn1
	}

	return nil
}

func CreateCustomfieldChucNangDOFFICE(jiraPrjKey, sdpChucNang, sdpChucNangChil string) *CascadingSelectCF {
	var child *SelectCF
	if len(sdpChucNangChil) > 0 {
		child = &SelectCF{
			Value: sdpChucNangChil,
		}
	}
	if jiraPrjKey == constant.KProjects[constant.KSdpTemplateDOFFICE] && len(sdpChucNang) > 0 {
		cn1 := &CascadingSelectCF{
			Value: sdpChucNang,
			Child: child,
		}
		return cn1
	}

	return nil
}
func CreateCustomfieldChucNangDTXD(jiraPrjKey, sdpChucNang, sdpChucNangChil string) *CascadingSelectCF {
	var child *SelectCF
	if len(sdpChucNangChil) > 0 {
		child = &SelectCF{
			Value: sdpChucNangChil,
		}
	}
	if jiraPrjKey == constant.KProjects[constant.KSdpTemplateIMIS] && len(sdpChucNang) > 0 {
		cn1 := &CascadingSelectCF{
			Value: sdpChucNang,
			Child: child,
		}
		return cn1
	}

	return nil
}
func CreateCustomfieldChucNangHRMS(jiraPrjKey, sdpChucNang, sdpChucNangChil string) *CascadingSelectCF {
	var child *SelectCF
	if len(sdpChucNangChil) > 0 {
		child = &SelectCF{
			Value: sdpChucNangChil,
		}
	}
	if jiraPrjKey == constant.KProjects[constant.KSdpTemplateHRMS] && len(sdpChucNang) > 0 {
		cn1 := &CascadingSelectCF{
			Value: sdpChucNang,
			Child: child,
		}
		return cn1
	}

	return nil
}

func CreateCustomfieldChucNangPortal(jiraPrjKey, sdpChucNang, sdpChucNangChil string) *CascadingSelectCF {
	var child *SelectCF
	if len(sdpChucNangChil) > 0 {
		child = &SelectCF{
			Value: sdpChucNangChil,
		}
	}
	if jiraPrjKey == constant.KProjects[constant.KSdpTemplatePORTAL] && len(sdpChucNang) > 0 {
		cn1 := &CascadingSelectCF{
			Value: sdpChucNang,
			Child: child,
		}
		return cn1
	}

	return nil
}

func CreateCustomfieldPhanHeIMIS2(jiraPrjKey, sdpSubCat, sdpSubCatChil string) *CascadingSelectCF {
	var child *SelectCF
	if len(sdpSubCatChil) > 0 {
		child = &SelectCF{
			Value: sdpSubCatChil,
		}
	}
	if jiraPrjKey == constant.KProjects[constant.KSdpTemplateIMIS] && len(sdpSubCat) > 0 {
		cn1 := &CascadingSelectCF{
			Value: sdpSubCat,
			Child: child,
		}
		return cn1
	}

	return nil
}

func CreateCustomfield18760(sdpLink string) string {
	return sdpLink
}

// Giai đoạn phát sinh issue
func CreateCustomfieldSelectCF(sdpSelected string) *SelectCF {
	if len(sdpSelected) > 0 {
		return &SelectCF{Value: sdpSelected}
	}
	return nil
}

// Mã BC/Form
func CreateCustomfield10769(jiraPrjKey, sdpBC string) *SelectCF {
	if jiraPrjKey == constant.KProjects[constant.KSdpTemplateERP] && len(sdpBC) > 0 {
		return &SelectCF{Value: sdpBC}
	}
	return nil
}

// Mức độ gấp
func CreateCustomfield10262(sdpDoGap string) *SelectCF {
	if len(sdpDoGap) > 0 {
		return &SelectCF{Value: sdpDoGap}
	}
	return nil
}

// Validate
func JiraValidate(fields *JiraFields) error {

	if fields.Project == nil {
		return errors.New("[template] khong chinh xac")
	}

	// pKey := fields.Project.Key

	if len(fields.Summary) == 0 {
		return errors.New("[subject] chua duoc set")
	}

	if fields.Issuetype == nil {
		return errors.New("[issue type] chua duoc set")
	}

	if len(fields.Description) == 0 {
		return errors.New("[description] chua duoc set")
	}

	if fields.Customfield17860 == nil {
		return errors.New("[giai doan phat sinh issue]  chua duoc set")
	}

	if fields.Customfield16760 == nil {
		return errors.New("[Trang thai theo 5249] chua duoc set")
	}

	if fields.Customfield16562 == nil {
		return errors.New("[issue trung lap] chua duoc set")
	}

	if fields.Customfield11761 == nil {
		return errors.New("[subcategory] chua duoc set")
	}

	if fields.Customfield10012 == nil {
		return errors.New("[don vi/khach hang] chua duoc set")
	}

	if len(fields.Customfield10014) == 0 {
		return errors.New("[thong tin lien he] chua duoc set")
	}

	if fields.Customfield16960 == 0 {
		return errors.New("[so dien thoai] chua duoc set")
	}

	if fields.Customfield11060 == nil {
		return errors.New("[mode] chua duoc set")
	}

	// if (pKey == constant.KProjects[constant.KSdpTemplateCMIS]) && fields.Customfield13260 == nil {
	// 	return errors.New("[chuc nang subcategory] chua duoc set")
	// }

	// if pKey == constant.KProjects[constant.KSdpTemplateDOFFICE] && fields.Customfield15460 == nil {
	// 	return errors.New("[chuc nang DOffice] chua duoc set")
	// }

	// if pKey == constant.KProjects[constant.KSdpTemplateIMIS] && fields.Customfield13660 == nil {
	// 	return errors.New("[chuc nang DTXD] chua duoc set")
	// }

	// if pKey == constant.KProjects[constant.KSdpTemplateHRMS] && fields.Customfield10013 == nil {
	// 	return errors.New("[chuc nang HRMS] chua duoc set")
	// }

	// if pKey == constant.KProjects[constant.KSdpTemplatePORTAL] && fields.Customfield13661 == nil {
	// 	return errors.New("[chuc nang EVN Portal] chua duoc set")
	// }

	if len(fields.Customfield18760) == 0 {
		return errors.New("[Link Service Desk] chua duoc set")
	}

	return nil
}
