Dec	Hx	Oct Html	Char	Dec	Hx	Oct	Html	Char	Dec	Hx	Oct	Html	Char
0	0	000		    NUL		43	2B	053	&#43;	+		86	56	126	&#86;	V
1	1	001		    SOH		44	2C	054	&#44;	,		87	57	127	&#87;	W
2	2	002		    STX		45	2D	055	&#45;	-		88	58	130	&#88;	X
3	3	003		    ETX		46	2E	056	&#46;	.		89	59	131	&#89;	Y
4	4	004		    EOT		47	2F	057	&#47;	/		90	5A	132	&#90;	Z
5	5	005		    ENQ		48	30	060	&#48;	0		91	5B	133	&#91;	[
6	6	006		    ACK		49	31	061	&#49;	1		92	5C	134	&#92;	\
7	7	007		    BEL		50	32	062	&#50;	2		93	5D	135	&#93;	]
8	8	010		    BS		51	33	063	&#51;	3		94	5E	136	&#94;	^
9	9	011		    TAB		52	34	064	&#52;	4		95	5F	137	&#95;	_
10	A	012		    LF		53	35	065	&#53;	5		96	60	140	&#96;	`
11	B	013		    VT		54	36	066	&#54;	6		97	61	141	&#97;	a
12	C	014		    FF		55	37	067	&#55;	7		98	62	142	&#98;	b
13	D	015		    CR		56	38	070	&#56;	8		99	63	143	&#99;	c
14	E	016		    SO		57	39	071	&#57;	9		100	64	144	&#100;	d
15	F	017		    SI		58	3A	072	&#58;	:		101	65	145	&#101;	e
16	10	020		    DLE		59	3B	073	&#59;	;		102	66	146	&#102;	f
17	11	021		    DC1		60	3C	074	&#60;	<		103	67	147	&#103;	g
18	12	022		    DC2		61	3D	075	&#61;	=		104	68	150	&#104;	h
19	13	023		    DC3		62	3E	076	&#62;	>		105	69	151	&#105;	i
20	14	024		    DC4		63	3F	077	&#63;	?		106	6A	152	&#106;	j
21	15	025		    NAK		64	40	100	&#64;	@		107	6B	153	&#107;	k
22	16	026		    SYN		65	41	101	&#65;	A		108	6C	154	&#108;	l
23	17	027		    ETB		66	42	102	&#66;	B		109	6D	155	&#109;	m
24	18	030		    CAN		67	43	103	&#67;	C		110	6E	156	&#110;	n
25	19	031		    EM		68	44	104	&#68;	D		111	6F	157	&#111;	o
26	1A	032		    SUB		69	45	105	&#69;	E		112	70	160	&#112;	p
27	1B	033		    ESC		70	46	106	&#70;	F		113	71	161	&#113;	q
28	1C	034		    FS		71	47	107	&#71;	G		114	72	162	&#114;	r
29	1D	035		    GS		72	48	110	&#72;	H		115	73	163	&#115;	s
30	1E	036		    RS		73	49	111	&#73;	I		116	74	164	&#116;	t
31	1F	037		    US		74	4A	112	&#74;	J		117	75	165	&#117;	u
32	20	040	 &#32;Space		75	4B	113	&#75;	K		118	76	166	&#118;	v
33	21	041	 &#33;	!		76	4C	114	&#76;	L		119	77	167	&#119;	w
34	22	042	 &#34;	"		77	4D	115	&#77;	M		120	78	170	&#120;	x
35	23	043	 &#35;	#		78	4E	116	&#78;	N		121	79	171	&#121;	y
36	24	044	 &#36;	$		79	4F	117	&#79;	O		122	7A	172	&#122;	z
37	25	045	 &#37;	%		80	50	120	&#80;	P		123	7B	173	&#123;	{
38	26	046	 &#38;	&		81	51	121	&#81;	Q		124	7C	174	&#124;	|
39	27	047	 &#39;	'		82	52	122	&#82;	R		125	7D	175	&#125;	}
40	28	050	 &#40;	(		83	53	123	&#83;	S		126	7E	176	&#126;	~
41	29	051	 &#41;	)		84	54	124	&#84;	T		127	7F	177	&#127;	DEL
42	2A	052	 &#42;	*		85	55	125	&#85;	U


// read text file encoding
        public static Encoding GetEncoding(string filename)
        {
            // Read the BOM
            var bom = new byte[4];
            using (var file = new FileStream(filename, FileMode.Open, FileAccess.Read))
            {
                file.Read(bom, 0, 4);
            }

            // Analyze the BOM
            if (bom[0] == 0x2b && bom[1] == 0x2f && bom[2] == 0x76) return Encoding.UTF7;
            if (bom[0] == 0xef && bom[1] == 0xbb && bom[2] == 0xbf) return Encoding.UTF8;
            if (bom[0] == 0xff && bom[1] == 0xfe) return Encoding.Unicode; //UTF-16LE
            if (bom[0] == 0xfe && bom[1] == 0xff) return Encoding.BigEndianUnicode; //UTF-16BE
            if (bom[0] == 0 && bom[1] == 0 && bom[2] == 0xfe && bom[3] == 0xff) return Encoding.UTF32;
            return Encoding.ASCII;
        }